// <auto-generated />
using System;
using GEMEscolar.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GEMEscolar.Core.Migrations
{
    [DbContext(typeof(GEMContext))]
    partial class GEMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GEMEscolar.Core.Entities.Alunos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DescontaEmPorcentagem")
                        .HasColumnType("integer");

                    b.Property<double>("MensalidadeValor")
                        .HasColumnType("double precision");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("text");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<Guid?>("ResponsavelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<Guid?>("TurmaId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TurmasId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("TurmasId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Mensalidades", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AlunosId")
                        .HasColumnType("uuid");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("DescontoPorcentagem")
                        .HasColumnType("integer");

                    b.Property<int>("Mes")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<bool>("Quitado")
                        .HasColumnType("boolean");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.ToTable("Mensalidades");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Professores", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("ChavePix")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("RG")
                        .HasColumnType("text");

                    b.Property<string>("Salario")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<string>("Telefone2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Responsavel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Rg")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<string>("Telefone2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Turmas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacidade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Sala")
                        .HasColumnType("text");

                    b.Property<string>("Turno")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EMail")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Alunos", b =>
                {
                    b.HasOne("GEMEscolar.Core.Entities.Responsavel", "Responsavel")
                        .WithMany("Alunos")
                        .HasForeignKey("ResponsavelId");

                    b.HasOne("GEMEscolar.Core.Entities.Turmas", "Turmas")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmasId");

                    b.Navigation("Responsavel");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Mensalidades", b =>
                {
                    b.HasOne("GEMEscolar.Core.Entities.Alunos", "Alunos")
                        .WithMany("Mensalidades")
                        .HasForeignKey("AlunosId");

                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Turmas", b =>
                {
                    b.HasOne("GEMEscolar.Core.Entities.Professores", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Alunos", b =>
                {
                    b.Navigation("Mensalidades");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Professores", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Responsavel", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("GEMEscolar.Core.Entities.Turmas", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
